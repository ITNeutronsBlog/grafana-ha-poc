version: '3'

services:
  postgres-node-1:
    container_name: postgres-node-1
    image: bitnami/postgresql-repmgr:latest
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=${POSTGRESQL_POSTGRES_PASSWORD}
      - POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - REPMGR_PASSWORD=${REPMGR_PASSWORD}
      - REPMGR_PRIMARY_HOST=postgres-node-1
      - REPMGR_NODE_NAME=postgres-node-1
      - REPMGR_NODE_NETWORK_NAME=postgres-node-1
      - REPMGR_PRIMARY_PORT=${REPMGR_PRIMARY_PORT}
      - REPMGR_PORT_NUMBER=${REPMGR_PORT_NUMBER}
      - REPMGR_PARTNER_NODES=${REPMGR_PARTNER_NODES}
      - BITNAMI_DEBUG=true
    ports:
      - "5432:5432"
    volumes:
      - /home/ubuntu/docker_volumes/postgres-node-1-data:/bitnami/postgresql

  postgres-node-2:
    container_name: postgres-node-2
    image: bitnami/postgresql-repmgr:latest
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=${POSTGRESQL_POSTGRES_PASSWORD}
      - POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - REPMGR_PASSWORD=${REPMGR_PASSWORD}
      - REPMGR_PRIMARY_HOST=postgres-node-1
      - REPMGR_NODE_NAME=postgres-node-2
      - REPMGR_NODE_NETWORK_NAME=postgres-node-2
      - REPMGR_PRIMARY_PORT=${REPMGR_PRIMARY_PORT}
      - REPMGR_PORT_NUMBER=${REPMGR_PORT_NUMBER}
      - REPMGR_PARTNER_NODES=${REPMGR_PARTNER_NODES}
      - BITNAMI_DEBUG=true
    depends_on:
      - postgres-node-1
    ports:
      - "5433:5432"
    volumes:
      - /home/ubuntu/docker_volumes/postgres-node-2-data:/bitnami/postgresql

  pgadmin-prod:
    container_name: pgadmin-prod
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"

  grafana-node-1:
    container_name: grafana-node-1
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/config/grafana.ini:/etc/grafana/grafana.ini
      - /home/ubuntu/docker_volumes/grafana-node-1-data:/var/lib/grafana
    depends_on:
      - haproxy

  grafana-node-2:
    container_name: grafana-node-2
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3001:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/config/grafana.ini:/etc/grafana/grafana.ini
      - /home/ubuntu/docker_volumes/grafana-node-2-data:/var/lib/grafana
    depends_on:
      - haproxy

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - grafana-node-1
      - grafana-node-2

  haproxy:
    image: haproxy:latest
    ports:
      - "5434:5432"
      - "8404:8404"
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    depends_on:
      - postgres-node-1
      - postgres-node-2

  haproxy-exporter:
    image: prom/haproxy-exporter:latest
    container_name: haproxy-exporter
    ports:
      - "9101:9101"
    command:
      - '--haproxy.scrape-uri=http://haproxy:8404/;csv'
    depends_on:
      - haproxy
